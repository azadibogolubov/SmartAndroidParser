options {
}
 
PARSER_BEGIN(DroidParser)
 
public class DroidParser {
 
    public static void main(String[] args) throws ParseException {
        DroidParser parser = new DroidParser(System.in);
        System.out.println("Welcome to Droid Interpreter");
        while (true) {
            parser.parseCurrentLine();
        }
    }
 
}
 
PARSER_END(DroidParser)
 
SKIP:
{
    " " | "\r" | "\t"
}
 
TOKEN:
{
    <NUMBER: (<DIGIT>)+ ("."(<DIGIT>)+)?> 
    | <DIGIT: ["0"-"9"]> 
    | <BUTTON: "Button"> 
    | <EDITTEXT: "EditText"> 
    | <TEXTVIEW: "TextView"> 
    | <LISTVIEW: "ListView"> 
    | <RELLAYOUT: "RelativeLayout"> 
    | <LINLAYOUT: "LinearLayout"> 
    | <CLICK: "Click">
    | <VAR: (["A"-"Z", "a"-"z"]){1} (["A"-"Z", "a"-"z", "0"-"9"])*> 
    | <TEXT: (["A"-"Z", "a"-"z", "0"-"9"])+>
    | <EOL: "\n">
}
 
void parseCurrentLine():
{
    String type;
    String name;
    String id;
    String text;
}
{
    type=controlType() name=name() id=id() text=controlText() <EOL>
    { 
        System.out.println(type + " " + name + ";"); 
        System.out.println(name + " = (" + type + ") findViewById(R.id." + id + ");"); 
        System.out.println(name + ".setText(\"" + text + "\");"); 
    }
    |
    type=layoutType() name=name() id=id() <EOL>
    {
        System.out.println(type + " " + name + ";"); 
        System.out.println(name + " = (" + type + ") findViewById(R.id." + id + ");"); 
    }
    |
    <CLICK> id=id()
    {
        System.out.println(id + ".setOnClickListener(new View.OnClickListener() {");
        System.out.println("@Override");
        System.out.println("\tpublic void onClick(View v) {");
        System.out.println("\t\t// Add click logic here...");
        System.out.println("\t}");
        System.out.println("});");
    }
    <EOL>
    |
    <EOF>   { System.exit(-1); }
}

String controlType():
{
    Token type;
}
{
    type = <BUTTON> { return type.toString(); }
    | type = <EDITTEXT> { return type.toString(); }
    | type = <TEXTVIEW> { return type.toString(); }
    | type = <LISTVIEW> { return type.toString(); }
}

String layoutType():
{
    Token type;
}
{
    type = <RELLAYOUT> { return type.toString(); }
    | type = <LINLAYOUT> { return type.toString(); }
}

String name():
{
    Token name;
}
{
    name = <TEXT> 
    { 
        System.out.println("ERROR: Bad name"); 
        return ""; 
    }
    | name = <VAR> { return name.toString(); }
}

String id():
{
    Token id;
}
{
    id = <VAR> { return id.toString(); }
    | id = <TEXT> 
    { 
        System.out.println("ERROR: Bad ID"); 
        return ""; 
    }
}

String controlText():
{
    Token text;
}
{
    text = <TEXT> { return text.toString(); }
}