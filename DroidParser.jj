options {
    LOOKAHEAD=2;
}
 
PARSER_BEGIN(DroidParser)
 
public class DroidParser {
 
    public static void main(String[] args) throws ParseException {
        DroidParser parser = new DroidParser(System.in);
        System.out.println("Welcome to Droid Interpreter");
        while (true) {
            parser.parseCurrentLine();
        }
    }
 
}
 
PARSER_END(DroidParser)
 
SKIP:
{
    " " | "\r" | "\t"
}
 
TOKEN:
{
    <NUMBER: (<DIGIT>) + ("."(<DIGIT>)+)?> | <DIGIT: ["0"-"9"]> 
    | <BUTTON: "Button"> | <EDITTEXT: "EditText"> | <TEXTVIEW: "TextView"> 
    | <LISTVIEW: "ListView"> | <RELLAYOUT: "RelativeLayout"> | <LINLAYOUT: "LinearLayout"> 
    | <VARIABLE: (["A"-"Z", "a"-"z"])+> | <EOL: "\n">
}
 
void parseCurrentLine():
{
    String type;
    String name;
    String id;
    String text;
}
{
    type=controlType() name=controlName() id=controlId() text=controlText() <EOL>
    { 
        System.out.println("\nCode:");
        System.out.println(type + " " + name + ";"); 
        System.out.println(name + " = (" + type + ") findViewById(R.id." + id + ");"); 
        System.out.println(name + ".setText(\"" + text + "\");"); 
    }
    |
    <EOL>
    |
    <EOF>   { System.exit(-1); }
}

String controlType():
{
    Token type;
}
{
    type = <BUTTON> { return type.toString(); }
    | type = <EDITTEXT> { return type.toString(); }
    | type = <TEXTVIEW> { return type.toString(); }
    | type = <LISTVIEW> { return type.toString(); }
    | type = <RELLAYOUT> { return type.toString(); }
    | type = <LINLAYOUT> { return type.toString(); }
}

String controlName():
{
    Token name;
}
{
    name = <VARIABLE> { return name.toString(); }
}

String controlId():
{
    Token id;
}
{
    id = <VARIABLE> { return id.toString(); }
}

String controlText():
{
    Token text;
}
{
    text = <VARIABLE> { return text.toString(); }
}